{
  "id": "962c3bd8-db32-4719-a1bd-b77c1d256994",
  "realm": "keycloak-angular-sandbox",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "6d8c59dc-d85c-47f1-859b-657c138a1932",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "962c3bd8-db32-4719-a1bd-b77c1d256994",
        "attributes": {}
      },
      {
        "id": "01591930-a550-4e91-9725-17d7cfe5d5dc",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "962c3bd8-db32-4719-a1bd-b77c1d256994",
        "attributes": {}
      },
      {
        "id": "e8ac2754-f3af-4e3b-aeeb-11c573d83932",
        "name": "default-roles-keycloak-angular-sandbox",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "962c3bd8-db32-4719-a1bd-b77c1d256994",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "ec07a4a7-1ec5-48fa-bb90-1615ba1427a1",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "54f61532-8b02-46a7-bc7f-aa242dac0c4a",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "44965159-1db3-4227-b700-12e91762f0fb",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "6300ca94-e6d4-4b76-9d38-965b10851de7",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "ecd21073-a32c-4c6f-b32f-7a9b889e8e9b",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "2a58d6ed-d4d8-479e-a5a2-4fe869972ad3",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "910f483d-3f11-4004-a505-687a5167fd5b",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "a6632c87-ecc6-493d-92b3-317e867f0c8a",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "c2f81f4c-b008-4317-8b6d-4b2cc9af7d84",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "6b6bee47-6480-4600-bfdf-1f855ad51ba2",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "4c836890-f220-466f-9948-a87bc9f5f5a8",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "430702e9-3216-4659-8bb8-4e7337788602",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "c4a57c65-66c9-4820-a8b6-12b0ba7387ff",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "f46310fc-811a-4e1e-886a-0ac57b71fc0d",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "fd383de5-f41e-4aa1-ad86-d6eac34d7f59",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "manage-clients",
                "impersonation",
                "view-users",
                "manage-users",
                "query-groups",
                "manage-identity-providers",
                "query-users",
                "manage-events",
                "view-identity-providers",
                "view-authorization",
                "manage-authorization",
                "query-clients",
                "query-realms",
                "manage-realm",
                "view-realm",
                "create-client",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "7e09b7bd-5d72-4634-b114-d81ae16415f5",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "21e56d54-1815-449f-87d6-1e654d143f8e",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "0ba46003-af77-4770-af4e-876b60ab4045",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        },
        {
          "id": "b15a7c89-52e3-4b30-b2ad-f30d81743c18",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "fae2a72b-81d7-4929-b361-54cb01a49de9",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "1dc95185-b992-4649-a583-6056de0579ef",
          "attributes": {}
        }
      ],
      "keycloak-angular": [
        {
          "id": "fbaa2f12-f34f-4ce8-b9e1-765d4c17d98e",
          "name": "view-profile",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "94789e06-ac5e-419b-8662-563099827fd9",
          "attributes": {}
        },
        {
          "id": "43b990fd-5722-4618-8108-258ce5468fe0",
          "name": "view-books",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "94789e06-ac5e-419b-8662-563099827fd9",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "ee773fbb-7e0e-4393-ab1a-434f2e85745f",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "58c9f2ee-7fef-4a25-8445-2a1a92d62a4e",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "69a39d03-288a-42be-9393-e1c06de78a89",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "0f4a46b2-e816-4a4e-8542-c35722ba0200",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "d8be6646-868b-40cf-8290-060b317defdd",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "f3fbdef8-cb50-4eee-88b9-61a448c577bc",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "5db58fcc-03ff-4bcb-8255-14f4ca22d3cc",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        },
        {
          "id": "2210a150-7eb2-4853-9a74-85798c5455fa",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "661e43b1-1247-4f68-835d-8a96b1c5315b",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "e8ac2754-f3af-4e3b-aeeb-11c573d83932",
    "name": "default-roles-keycloak-angular-sandbox",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "962c3bd8-db32-4719-a1bd-b77c1d256994"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName"],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "41cdb3ac-bb8e-4f1e-bd5b-dbd144a4ee86",
      "username": "admin",
      "firstName": "Admin",
      "lastName": "",
      "email": "admin@keycloak-angular.com",
      "emailVerified": true,
      "createdTimestamp": 1669685802896,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "5291c160-14ac-48be-9872-a70d0a3a6cfa",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1669685812309,
          "secretData": "{\"value\":\"SzpzWG7BiIHrtK9/Q98wGObWfe086ausY43HPShkVGsByscGgvoCo77+vDJzOeRmHKCJWNOnx0BYiCT8pYSPKA==\",\"salt\":\"qBvKnYiJ1q4N66UwsTB+og==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-keycloak-angular-sandbox"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "57606671-2ee4-44a2-95b7-d1b7945e467c",
      "username": "johndoe",
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoe@email.com",
      "emailVerified": true,
      "createdTimestamp": 1734548742446,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "12e731c2-2293-47ae-b89f-fa7807cb28bd",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1734548769081,
          "secretData": "{\"value\":\"NjKqin5HjRnO0ItBWmMDpTcq6kAzZe9E/qtfameYJxo=\",\"salt\":\"vgZFNDXRNNeFaZvZQFGn2w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-keycloak-angular-sandbox"],
      "clientRoles": {
        "keycloak-angular": ["view-profile", "view-books"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "661e43b1-1247-4f68-835d-8a96b1c5315b",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/keycloak-angular-sandbox/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/keycloak-angular-sandbox/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "5cf3bc33-01c6-4871-a1e1-49feb236163d",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/keycloak-angular-sandbox/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/keycloak-angular-sandbox/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "25902c2d-9ebb-4a5e-afe2-7bee123a3e63",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "812631ba-d4d6-40a9-8223-135a6068a645",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "1dc95185-b992-4649-a583-6056de0579ef",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "94789e06-ac5e-419b-8662-563099827fd9",
      "clientId": "keycloak-angular",
      "name": "Keycloak Angular Sandbox",
      "description": "",
      "rootUrl": "http://localhost:4200",
      "adminUrl": "",
      "baseUrl": "http://localhost:4200",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:4200/*"],
      "webOrigins": ["http://localhost:4200"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "60",
        "post.logout.redirect.uris": "http://localhost:4200/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "tls-client-certificate-bound-access-tokens": "false",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "display.on.consent.screen": "false",
        "client.session.max.lifespan": "1800",
        "client.session.idle.timeout": "300",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "2bcd08c5-acb4-47d4-8039-512cffac8a45",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "77e410a7-5c78-4bf2-be51-014a00c46fdd",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/keycloak-angular-sandbox/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/keycloak-angular-sandbox/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d49672f9-e31a-4731-bef9-ff464b00422d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "1c4bfc2b-5f77-4125-a562-e93dadb37680",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cfa03e90-39f3-4606-84a0-ded3008606fd",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "c7966359-02b2-4c58-856e-5fe51da4d0fd",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "04afe53f-7090-43d1-a213-b4adc0e14579",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "935f598e-0328-49c5-b260-6c0635c6a4d9",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "8177f207-9954-449f-b678-5ab0f81c6d75",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "e13f9a40-6d5c-420d-87c9-f2c42a033379",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "dfd84027-35da-4ddc-93b2-24b10882c9dc",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b301bb4c-44f5-4d35-a9e7-97f4993e134c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "af48bbeb-d4d8-46e7-8643-6a2be4973299",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e2ed17c9-301b-4818-bf87-65787ae1a9cc",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "da92c61b-adb2-4135-9c13-ef661637b102",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "4ed8037f-3ec1-4786-99cf-07c8dd10e150",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "64339e13-f9b3-4332-8ca8-49274cf0985f",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "bf7602a8-941b-4f9a-9723-d394aec34dd2",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8fae95d4-3989-40df-8fc7-5b0a8e33a439",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "b37fe5fe-41b8-43a5-a226-58f7653ab60c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "af7202d4-a4f2-49b9-90cc-72d463d6f8c3",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "fd59501d-b40a-4fdf-aac5-c7c0a48caa69",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "872b20cd-cb45-4120-ae56-69f43f580c61",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "40c9acda-b46e-4ee5-aca8-fd4260d8785e",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ce5d282f-e9b2-47d1-954a-1a12d0aecba5",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "118a2936-d985-4745-ba55-78d247a5621e",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cdac8783-989c-4b6a-8a17-a4a2e936acdf",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "6ab45a53-5e59-4189-b56f-8b45aa9bc497",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "7435f32a-adad-4ceb-bb0d-08f4be8a4226",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "681f53fe-baad-456d-a908-1a470774c214",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "72a6a678-4fb4-4794-9318-7fd4d4f3bc75",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "6f555e52-2477-4e78-bb8e-e7bd1a8c5033",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "e5078379-bb15-454e-93ad-5a6500345af7",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "15eaf3f5-fda4-4ffd-b6d2-2f9e4c0c1130",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "8447ae3e-139a-4327-9ea6-f94092527a1d",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "64960658-09bc-4abb-b00c-3ff29a8e26e4",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c42fedc9-a50c-4507-a979-a1e69bbfef46",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "cbba6d8c-f6f6-47c8-b8ce-16197785206c",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "dad51fb8-6c2a-43d9-a857-388380467b55",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "acc59482-3375-4949-b7f0-2a1a489ddf2f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "9b34aaca-ec1f-4fe4-9961-e6d1bbb3297e",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "eed22097-d719-4eda-86d7-8ff462a1f2fe",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8a4fba21-a235-4ba7-895c-9f794e2ea622",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr", "basic"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e132b68e-5e1a-4c73-8077-5b80b7e1261f",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5334ec3e-c4ff-4993-b33c-f024f6e85c2a",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "caebb29f-4dae-4576-b4a9-5608869cf9e6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "0a8cc495-5b50-4a08-96c1-10c0ce5503ea",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "89c78129-ad14-44bc-8334-5fdaa0fa495d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "ee7063b5-0f1a-4ffe-99ac-7d8e298f7cc5",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "832a731e-581e-4af1-929f-cfd0bba504c7",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "753c0459-9d87-405e-b9b3-3bd25e585696",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "2d0d576f-75c1-406e-bef2-9f2be9441d1c",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "672c4e7a-68e9-4ebc-8c14-c5cddd1e405d",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["f5f0aab0-8ee0-4563-a3f5-f992c708394b"],
          "secret": [
            "oEPivFZX4y2vfb7nZj00Z5CaMykBx4FswsnnTlzk1flJiEcGG7ZraoEGPRYZrORtLZ3LdGTROvRYQJlE5cNguOzenRN-24iFjBXWC_Olo71poZrTRR7Ffte3T7_NCVm_Rhkg4OQWKphBuvteYB--Cuzd-XrzZEiMKamcJaERrkI"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "67ae4670-ee5a-4702-9b91-587e98e5fa4f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["365968a7-581f-488d-abda-fddecf147c8a"],
          "secret": ["TkTZ0hZ7R0urTJZi0F8cfw"],
          "priority": ["100"]
        }
      },
      {
        "id": "cbf738b3-f0f6-4a8f-ab87-f0a7869436af",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAnMzuXhmG4gcY63FRwlYPadgayR+2RVoRC7FC7DKEWxieKKgopU8DJDTCv5AvFlswr1h2nKMQi5g4dp8HTuOLoHf8Mpm70yMrCsiHdfEDdFUOP+aKsid99pgWF97yBeaiNAeoMR3O66g1vfngu8axgBImuj/SxGnqntvhfUjp1VwpSi+lG1ijCjzJE+GaJlOI/p3639JqE8bBCvgJCAWSYH1rJ7lsIf28DM364wAgZIFw0e1t5H7CUGwt+OIjxGgJGpj2IKEd0bOBEqicTx27hY3iU8VUwDznWH1koFHjSayhFpdTw9kg0htVxMaAYoFZ28GfDOS83VrwmL9T4cOyIQIDAQABAoIBAAvWnRiVrM1b49HC2H1nqfo/yqXsswJBbpAHbhoPJlcKYMaJC6iPcplFMn7sD+IMOHzEnQ/ub81aTMkH8LFQFLak2HGpkbi7KwDBaxjIfY5G7bB9Y3NX7/ayPNjIiFVRuGVdPqGWsoywQn55YzJKKhSVSj89mlgh9wjPaRLgcmcdU+/as/1/HH0UnvuItyB/xR6wdaTg1X5QjFG2CfueYwamQCOMzdPiePEyO2nP8SEORj6XT8IDV7nGFh4vXZSWD5AQ8xv1s4hK1QaSQ0iUW1TfQTBfUG/jxSSOxrbfvFdFBtadlef7S51/vMjmvMx40ljmuiJbkdIIntwsFVtrKpECgYEAyLzfZSSuvIX3JxLBgsaBMdJaTiRXLotkrM5jttwKX3YIoWj3tQTd0jZMe/40XAGH2zIdWQ7LsoEgcr/GIb1mhOwJnXP2foQY+WTpA2mwoEd2UIs9U9oVq4stbB19uXfenSNE3WCTpgEt1VOvPeKcjqI5aAoIujzht5TqHIam2csCgYEAx/eM5RnkXYEcPTXp8GeJM90gecC74stUfapZWvwn+IBuOnDk0248BCNT70Q7/XQuzrLFnLvggFWDnTNx5782SA4/tmB3UwqivWnnpmhyE++F+bFTmkq4quseIgXo5jKWcXJecE4ZoHC6eSpWf8xh2qgyLDGK4DCXzi/C7OD71kMCgYEAoBR2tirtqevPb/p2FTsF9lxApcY3PCfvTht8y2toXj47nbSerV3HI4cnsU3EJYcW90dcvhOdf6mX3cpvT6LB6cht1oGOlc/0NpYxeAZF01uJz6tqab8lvtpLi8ds5oXgIkHo/f2xYRXZniCRRHG91cUqsHwn/5Tjj8oSdFMxJccCgYBnjhA9+Kmlrp4EKO5sXAHWhPYzdxcVvPyVU2mQz7KXY1MyGpK114lnDzCBYRG8ELXIvxXNNBJwA1j0SNb9D625pP9joBNLQt/CPZ0ENWSWZF06UJWd+oIlqTrinbLdu2bjezni6N8mkhpPcxh2eE5YoO/SqRllPmTvFxbX+y8P5wKBgQC89tfQknOPLSPvARQku+s2RPzvWsmzGZl1lbXuqUwdcqtmKx4zyXcb+dsV6qYT6icqxJ6PpLuPzGgT1AV1OMC0C7DlEuUn4EXJyWhr1pJIZn1JBUF2+Haf/IGyeGrZ7PAsJ1JJu5jQKu7fkQN1Cz5RiHItFm5w0fKciMbn226KzQ=="
          ],
          "certificate": [
            "MIICvzCCAacCBgGT2yiRcTANBgkqhkiG9w0BAQsFADAjMSEwHwYDVQQDDBhrZXljbG9hay1hbmd1bGFyLXNhbmRib3gwHhcNMjQxMjE4MTkwMzA5WhcNMzQxMjE4MTkwNDQ5WjAjMSEwHwYDVQQDDBhrZXljbG9hay1hbmd1bGFyLXNhbmRib3gwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCczO5eGYbiBxjrcVHCVg9p2BrJH7ZFWhELsULsMoRbGJ4oqCilTwMkNMK/kC8WWzCvWHacoxCLmDh2nwdO44ugd/wymbvTIysKyId18QN0VQ4/5oqyJ332mBYX3vIF5qI0B6gxHc7rqDW9+eC7xrGAEia6P9LEaeqe2+F9SOnVXClKL6UbWKMKPMkT4ZomU4j+nfrf0moTxsEK+AkIBZJgfWsnuWwh/bwMzfrjACBkgXDR7W3kfsJQbC344iPEaAkamPYgoR3Rs4ESqJxPHbuFjeJTxVTAPOdYfWSgUeNJrKEWl1PD2SDSG1XExoBigVnbwZ8M5LzdWvCYv1Phw7IhAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGSkjwQtOZIHXu404fAshEmAL+Fo9TJP7KzjAtRng3r43nHXVwlDbBGYvcnYmHnh9r5jnpCi6T2x7362ULX+fquptmjDeJTAyjulLpkWxznekPXkKtsMIHkXRzAkdLzCv0WT3g3Kkn5bIH0OKcOil+RlcK0ftF2Y9xSqsGSaSQu/hqFi++73GUV8/2jQBf3Hl5ZV4HDlVOxe32sEDPsprGAkCEkHqpIdi3vSqxXhsf+8Lg09ELK841F70B57VUMmvXqTiBoQkdZqlyS4L++jqPTwirRHtPadNQ0CdylQAhmhARcejFwoQ3s6OfHyW/xOCyPP+nxGHlAF5L04jV3OF6w="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "c9cf3209-5c34-4b2a-8021-7a74be5599d8",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAveU4J92jplookh98RLU4qcmUamxArx3K95xb8s02VLt3dMn8yPU/cOp3qSU+9KpnZ6UFjrjgNHxJxIlCv0T/rbYT251GGJYmcCAScMsJpRNHQI7zS6+BDFSrnYFgD5YnHYW1Ii6ReOKpS8SBWnYLxelwD6mr/bqp/Anf0KBfaH1XmBFLxMcZzM/vNBIcr8DE/kUIVdVOXperSbmOfL+GfZmMhC2hzaD6BJnUshqsOAVOfyaKOmuFfTr0uNnkmHBCbYlEyvxCzKJ9PDe+AkNofJseR7zyauDPx7QY2o6bGyBRVFhqPHUVpQWshow7Y4sy26/jAdRFS5w9MsQmsucLCQIDAQABAoIBAA//q2MEc+C0kN16xJv/TqZTYusycqKuVmbVKBQFQRITd0WCLQd7ThyDzJAWIL85Shv71cOIBO+3Fvn1fIej1wy6HeMvVXQF1ng044jYOlhLjwG76XiTcUJqMclD2KWHh4UfujqGhOAT7KKDDEjkUCqc98GCEIkAfIjNBivMDy282Gy2+Pj+wIlbDnjFom4OmsJqNqL1PeAtMkUBh75XR8e3FIEyf/njZ1Ygk2hrmOtyn1WbCEGiIsrx8TOfo/EBZq4YhMBmVq1nOVN6NtipuSNnna6tXobf54O5E6ZeYjuDRPqtfvVzQVlKhbTLVUiiKm12nMUQvDeG8KXaHds7e4ECgYEA7iRkkZp3jvlPv9Je7rC9COJhVjnN61abOyDYxesFIBsfQV/83D23wntgQPwPp9/9nWJl6hlAOnwhM4qDboyBqB2cyC0SxtKegSZI+zHVu584xA8eBRxoqlAjODe1eOm9ggUq2eiEMcsXD5SjNMwdQWPYi8pgrVRxd6I5b2BW7CECgYEAzCKihLV2ZN8/7qpHNhPsWkGhk/b9T3I0AhTnhJUE1QKIkEHu1XJzvicxHShyTPioKyHhwlazm3FElp2Yks8QKXBMytZJaIQAAotNQmoHoweWRrwPmxF6+s5bAhcmuCmqjw0KY+PqRO+RJJeLaaxjcFxqNjJxqAqt28Jwz+EeAekCgYEA5KpbSxhobwfj1MwazdU1Xp+JWXNdz/k0Sx1qKPlXzZFdfLe/pHc6yOsQ7LVcDxVcgFAojhW6/62Lb+Mz+uW95gCxN+FX40QAYQCzGUir82Ga71+Yss2pjsguWV/cyAKhLoTptZ23udxKA3L1F9Ba0xwdpXUpSaYI4hgKUHDQZiECgYBCQ7Px1F38XKQKO2gmW81LdyaWO4T69x1+135YAW+yHcJq4Zw/2YlM3rgIuQpxhf5BEhyQ00g2W0xigAH5FhIvAW9MIMdvj/nY2ZNYzcZw25OinoWKVuBO7hGI2i8NdSkSiq8mweNYQVQiRrdQtE8LOFSaB0HxxJWvUq0ALhlpkQKBgQDQFBlHPKcOpvjKjAHHZHHo6i+GaLIj/xkGMa1RSYuA1ApzWYi54/aWBi6HvMyh5sfqfSpkUiVe9IVfxbUHt7ox0FwIaTIsSNOwKJd5fa30B7xE7Ia1e7xgE1m7cUpul+nITg2GRHMBkU2aBaP9CA5a95uqhZ61Tg43wSZ1ZqHGwg=="
          ],
          "certificate": [
            "MIICvzCCAacCBgGT2yiRrjANBgkqhkiG9w0BAQsFADAjMSEwHwYDVQQDDBhrZXljbG9hay1hbmd1bGFyLXNhbmRib3gwHhcNMjQxMjE4MTkwMzA5WhcNMzQxMjE4MTkwNDQ5WjAjMSEwHwYDVQQDDBhrZXljbG9hay1hbmd1bGFyLXNhbmRib3gwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC95Tgn3aOmWiiSH3xEtTipyZRqbECvHcr3nFvyzTZUu3d0yfzI9T9w6nepJT70qmdnpQWOuOA0fEnEiUK/RP+tthPbnUYYliZwIBJwywmlE0dAjvNLr4EMVKudgWAPlicdhbUiLpF44qlLxIFadgvF6XAPqav9uqn8Cd/QoF9ofVeYEUvExxnMz+80EhyvwMT+RQhV1U5el6tJuY58v4Z9mYyELaHNoPoEmdSyGqw4BU5/Joo6a4V9OvS42eSYcEJtiUTK/ELMon08N74CQ2h8mx5HvPJq4M/HtBjajpsbIFFUWGo8dRWlBayGjDtjizLbr+MB1EVLnD0yxCay5wsJAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAayifrC4T0bFpcFn2T2/N1s50J5+PVEHhjQxB1KVXwkNGBrar9jKVXvUlgYDJeHI0Vd7eLp63wUkxd4b+3C6A3DH6161G+6WOGhCtfpuw11wzVs9cRWcJwRLUCgmDXfHhGC17qGVGDrwG8GnJsjKQcs4ls8eQMWjTP5IH21x01e/VVCLFOEwd4HSOrtiFsbjn2ciXdFafRlwwS++4S0FV+CtrtuYF3Vfcz6V/P3rmEpIY0g91GqjrJAxMw7OemQzQeKkV+B5itYcrtXTW7zEqN/RLtF4deTX9NKau6hc+qnUHqLr5Mkd8/bAMy7cHliKnFpjXZ2wjNfWuW/u9ZMbl0="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "a1926ba0-f74f-41a2-a6e7-836f5a6c52a1",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["5f4c1f40-9733-4af2-83b2-19cf331d3859"],
          "secret": [
            "P_b0hknvCZ7mXhk5y92flGRIGmbjoKsaT5q4nyY-V3oOfyAdaVgN3RlpDm8SRVOAZd13MwpqXaur0IjzGmTEkEEAT8d1OeRX4HN2YVemTqai7n7OmgwkLaIOSghLe3XOdTaArB3xWjUp9TGmVh8GxJJd5rJXCPfJxSmR10xKHKw"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "6db3ebc1-c16b-4412-9e6d-018a51f80740",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a0c3a266-ed7a-4665-a422-756320cb080f",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "52f7fa66-5004-4cf3-9bd6-036db4aee374",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c3fc71d6-7748-4a52-80e3-1495337a23e3",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "016b87c3-1bce-4b43-b6f6-5c6a640a93bd",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aeea6cad-45e3-4395-aabb-079f583fd203",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0794c71-2731-4c8d-a523-5e89fae2bc35",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ce0812a-8585-4736-8e6a-83a725a15b48",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51c6f3d0-6bfd-424a-84c2-79164952a16e",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bedd6868-37a2-4ab7-9256-825739d53469",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5bf4d66a-7c8c-471a-8029-ebd26dfe65cf",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2fbcb505-483c-4ab6-a312-23e33bbca834",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d5cc8bc-72a3-49a7-98dd-f17164622ee3",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1cbf33e-16aa-419d-bcf9-7ac5f45cbee5",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "43da3b7a-fcb0-48be-a237-1e5535934bd6",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f7364c79-ba72-44d5-9474-bee047f10164",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4fa8d6b5-6847-4a1c-abc8-e9936d733f1a",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cf6647f8-cddc-45b5-ab6e-525053fcc788",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "deb37956-752f-43fb-88a8-95890f2686d4",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "82a6b989-dd9b-40a0-8c00-5342c079c820",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.0.0",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
